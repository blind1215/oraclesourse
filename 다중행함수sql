--SELECT ename, SUM(sal) FROM emp; ename때문에 안됨
SELECT SUM(sal) FROM emp;
--sum : 합계
SELECT SUM(sal),SUM(DISTINCT sal), SUM(ALL sal) FROM emp;
--count : 개수
select count(*) from emp;

--부서번호가 30번인 직원 수 구하기 
select count(*)from emp
where depno=30;

select count(sal), count(distinct sal), count(all sal) from emp;

--max(최대값), min(최소값)
select max(sal),min(sal) from emp;

--부서번호가 20인 사원의 입사일 중 가장 최근 입사일 구하기
select max(hiredate) from emp where deptno=20;

--average : 평균 avg()
select avg(sal) from emp;
select avg(sal) from emp where deptno=30;
select avg(distinct sal) from emp;

--부서별 월급의 평균을 알고 싶다면?
select avg(sal) from emp where deptno=30;
select avg(sal) from emp where deptno=20;
select avg(sal) from emp where deptno=10;

--group by : 결과값을 원하는 열로 묶어 출력
select deptno, avg(sal) from emp group by deptno;

-- 부서번호별 추가수당 평균 구하기
select deptno, avg(comm) from emp group by deptno;

-- 부서번호, 직책별 급여 평균 구하기
select deptno, avg(sal),job 
from emp group by deptno , job order by deptno,job;

--group by 절에 포함 안되는 열을 select 에 포함하면 안됨
select ename,deptno,avg(sal)
from emp
group by deptno; --모아서 하나로 나올수없는 ename이 select에 있기때문에 오류가뜬다

-- having : group by 절에 조건을 줄 때 사용
-- 각 부서의 직책별 평균 급여를 구하되 그 평균 급여가 2000 이상인 그룹만
-- 출력
select deptno,job, avg(sal)
from emp
group by deptno,job
having avg(sal)>=2000 --where을 대신사용할수없음
order by deptno, job;

-- emp 테이블의 부서별 직책의 평균 급여가 500이상인 사원들의 
-- 부서번호, 직책,부서별 직책의 평균 급여 출력
select deptno,job,avg(sal)
from emp
group by deptno,job
having avg(sal)>=500;

select deptno, job, avg(sal)--2
from emp --1
where sal<=3000 --3 group by보다 먼저 실행됨
group by deptno, job having avg(sal)>=2000 --4 where와 같이 사용가능 단,원하는대로 나오지않을수도있음
order by deptno, job;--5

--join 중요함 !!!!!!!!!!
-- 조인
select*from emp,dept order by empno;
select count(*) from emp,dept order by empno; --56개행나옴 (14*4)
--나올수 있는 모든 조합 조회
--너무많기때문에 원하는걸 추출하는 작업을 할때 불편함
select*from dept; --4행
select*from emp;  --14행

--1) 내부조인(등가조인)
select*
from emp,dept
where emp.deptno = dept.deptno --조인기준
order by empno;

select*
from emp e,dept d
where e.deptno = d.deptno --조인기준
order by empno;

select*
from emp inner join dept
on emp.deptno = dept.deptno --조인기준
order by empno;

select*
from emp e inner join dept d
on e.deptno = d.deptno --조인기준
order by empno;

--두 테이블에 같은 이름의 필드가 존재하는 경우
--어느테이블에 있는 필드를 가지고 올 것인지 정확히 명시
select empno,ename,job, b.deptno,dname
from emp e,dept d
where e.deptno = d.deptno --조인기준
order by empno;

--dmp 테이블과 dept 데이터를 조인하여 enpno,ename,sal, deptno
--dname, loc 를 조회한다 단,급여가 3000 이상인 사원만 출력
select e.empno, e.ename, e.sal, d.deptno,d.dname,d.loc
from emp e, dept d
where e.deptno = d.deptno and sal>=3000;

--emp 테이블의 별칭을 e로, dept 테이블 별칭을 d로 하여
--급여가 2500이하이고, 사원번호가 9999 이하인 사원의 정보를 출력
select * 
from emp e, dept d 
where e.deptno = d.deptno and sal<=2500 and empno<=9999;


-- emp 테이블의 별칭을 e로, salgrade 테이블 별칭을 s로 하여
--각 사원의 정보와 더불어 사원의 등급 정보를 출력

select*from salgrade;
select*
from emp e, salgrade s
where e.sal between s.losal and s.hisal;
--둘의 같은 이름이 없기때문에 sal의 값을 losal과 hisal의 사이에있는 숫자로 조인기준으로 넣음


-- 2) 셀프조인(자체조인) : 조인 테이블이 자기 자신 테이블일때
select*from emp;

select E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO as MGR_EMPNO,E2.ENAME as MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO;
--조건을 만족하지않은 데이터가있어서 14개중에 13개만 추출됨 다보고싶다면 외부조인을 써야함

-- 3)외부조인(outer join) : 조건을 만족하지 않는 데이터도 추출

--reft outer join
select E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO as MGR_EMPNO,E2.ENAME as MGR_ENAME
FROM EMP E1 left outer join EMP E2
on E1.MGR = E2.EMPNO;

select E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO as MGR_EMPNO,E2.ENAME as MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR = E2.EMPNO(+);

--right outer join
select E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO as MGR_EMPNO,E2.ENAME as MGR_ENAME
FROM EMP E1 right outer join EMP E2
on E1.MGR = E2.EMPNO; --이게 표준임

select E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO as MGR_EMPNO,E2.ENAME as MGR_ENAME
FROM EMP E1, EMP E2
WHERE E1.MGR(+) = E2.EMPNO; --예전방식

-----------
select*from dept;
--ppt1번

SELECT D.DEPTNO,D.DNAME,E.EMPNO,E.ENAME,E.SAL
FROM EMP E ,DEPT D
WHERE E.DEPTNO = D.DEPTNO AND E.SAL>2000
ORDER BY E.DEPTNO ;

SELECT D.DEPTNO,D.DNAME,E.EMPNO,E.ENAME,E.SAL
FROM EMP E INNER JOIN DEPT D ON E.DEPTNO=D.DEPTNO
WHERE E.SAL>2000
ORDER BY E.DEPTNO ;



--ppt2번
SELECT D.DEPTNO,D.DNAME,TRUNC(AVG(E.SAL)),MAX(E.SAL),MIN(E.SAL),COUNT(*)
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
GROUP BY D.DEPTNO,D.DNAME;

SELECT D.DEPTNO,D.DNAME,FLOOR(AVG(E.SAL)),MAX(E.SAL),MIN(E.SAL),COUNT(*)
FROM EMP E INNER JOIN DEPT D 
ON E.DEPTNO = D.DEPTNO
GROUP BY D.DEPTNO,D.DNAME;



--ppt3번
SELECT D.DEPTNO,D.DNAME,E.EMPNO,E.ENAME,E.JOB,E.SAL
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) =D.DEPTNO
ORDER BY D.DEPTNO,D.DNAME,E.EMPNO;

SELECT D.DEPTNO,D.DNAME,E.EMPNO,E.ENAME,E.JOB,E.SAL
FROM EMP E RIGHT OUTER JOIN DEPT D
ON E.DEPTNO =D.DEPTNO
ORDER BY D.DEPTNO,D.DNAME,E.EMPNO;

--ppt4번

SELECT D1.DEPTNO,D1.DNAME,E1.EMPNO,E1.ENAME,E1.MGR,E1.SAL,E1.DEPTNO,
       S.LOSAL,S.HISAL,S.GRADE, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1
RIGHT OUTER JOIN DEPT D1 ON E1.DEPTNO = D1.DEPTNO
LEFT OUTER JOIN SALGRADE S ON E1.SAL BETWEEN S.LOSAL AND S.HISAL
LEFT OUTER JOIN EMP E2 ON E1.MGR = E2.EMPNO
ORDER BY D1.DEPTNO,E1.ENAME;

select D1.DEPTNO, D1.DNAME, E1.EMPNO, E1.ENAME, E1.MGR, E1.SAL, E1.DEPTNO,
       s.LOSAL,s.HISAL,s.GRADE,E2.EMPNO as MGR_EMPNO,E2.ENAME as MGR_ENAME
from EMP E1, DEPT D1, SALGRADE s, EMP E2
where E1.DEPTNO(+)=D1.DEPTNO and E1.SAL between s.LOSAL(+) and
      s.HISAL(+) and E1.MGR = E2.EMPNO(+)
order by D1.DEPTNO,E1.ENAME;
